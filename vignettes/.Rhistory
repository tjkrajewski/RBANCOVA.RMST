# During development, you can uncomment the next line in an interactive session
# to use the functions in R/ without installing the package:
# devtools::load_all("..")
devtools::install()
library(RBANCOVA.RMST)
library(dplyr)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
set.seed(2677)
# During development, you can uncomment the next line in an interactive session
# to use the functions in R/ without installing the package:
# devtools::load_all("..")
devtools::install()
library(RBANCOVA.RMST)
library(dplyr)
#--------------------------------------------------------------------------------#
# Filter PBC Data
#--------------------------------------------------------------------------------#
library(survival)
#Filter to those enrolled in the randomized trial
pbc_filtered <- pbc %>% filter(!is.na(trt))
#Original data: 0/1/2 = censored/transplant/dead
##Edit so that transplant = censored at time of transplant [death = 1, 0 = censored/transplant]
pbc_filtered <- pbc_filtered %>%
mutate(status_dichot = ifelse(status == 2, 1, 0))
#Create year variable and create arm variable [0=placebo, 1=D-penicillmain]
pbc_filtered <- pbc_filtered %>%
mutate(time_year = time/365,
arm = ifelse(trt == 2, 0, trt))
#Current RBANCOVA-RMST methodology assumes no missing data
#impute mean copper level within each group when missing.
mean_copper_1 <- mean(pbc_filtered[!(is.na(pbc_filtered$copper)) & pbc_filtered$arm==1,]$copper)
mean_copper_0 <-  mean(pbc_filtered[!(is.na(pbc_filtered$copper)) & pbc_filtered$arm==0,]$copper)
pbc_filtered <- pbc_filtered %>%
mutate(copper_imp = ifelse(is.na(copper), ifelse(arm==1, mean_copper_1, mean_copper_0), copper))
pbc_filtered_trt <- pbc_filtered[pbc_filtered$arm==1,]
pbc_filtered_ctl <- pbc_filtered[pbc_filtered$arm==0,]
rbancova_rmst(data_treated = pbc_filtered_trt, data_control=pbc_filtered_ctl, time_var="time_year", event_var="status_dichot", covariate_vars=NULL, timepoints=10, num_intervals=10)
rbancova_rmst(data_treated = pbc_filtered_trt, data_control=pbc_filtered_ctl, time_var="time_year", event_var="status_dichot", covariate_vars=c("stage","copper_imp", "bili", "albumin"), timepoints=10, num_intervals=10)
#Figure for single time point
##Needs to get estimates from function
##Needs to get estimates from continuous function (Tian), maybe Andersen?
rbancova_rmst(data_treated = pbc_filtered_trt, data_control=pbc_filtered_ctl, time_var="time_year", event_var="status_dichot", covariate_vars=c("stage","copper_imp", "bili", "albumin"), timepoints=c(5,10), num_intervals=10)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
set.seed(2677)
# During development, you can uncomment the next line in an interactive session
# to use the functions in R/ without installing the package:
# devtools::load_all("..")
devtools::install()
library(RBANCOVA.RMST)
library(dplyr)
#--------------------------------------------------------------------------------#
# Filter PBC Data
#--------------------------------------------------------------------------------#
library(survival)
#Filter to those enrolled in the randomized trial
pbc_filtered <- pbc %>% filter(!is.na(trt))
#Original data: 0/1/2 = censored/transplant/dead
##Edit so that transplant = censored at time of transplant [death = 1, 0 = censored/transplant]
pbc_filtered <- pbc_filtered %>%
mutate(status_dichot = ifelse(status == 2, 1, 0))
#Create year variable and create arm variable [0=placebo, 1=D-penicillmain]
pbc_filtered <- pbc_filtered %>%
mutate(time_year = time/365,
arm = ifelse(trt == 2, 0, trt))
#Current RBANCOVA-RMST methodology assumes no missing data
#impute mean copper level within each group when missing.
mean_copper_1 <- mean(pbc_filtered[!(is.na(pbc_filtered$copper)) & pbc_filtered$arm==1,]$copper)
mean_copper_0 <-  mean(pbc_filtered[!(is.na(pbc_filtered$copper)) & pbc_filtered$arm==0,]$copper)
pbc_filtered <- pbc_filtered %>%
mutate(copper_imp = ifelse(is.na(copper), ifelse(arm==1, mean_copper_1, mean_copper_0), copper))
library(survminer)
fit_trt <- survfit(Surv(time_year, status_dichot) ~ trt,
data =pbc_filtered)
# Visualize with survminer
ggsurvplot(fit_trt,
data = pbc_filtered,
risk.table = TRUE,
censor.shape = NA,                 # Remove plus signs at censoring points
legend.labs = c("D-penicillamine", "Placebo"),  # Rename the groups
xlab = "Years",                     # Change x-axis label to 'Years'
legend.title = "Trial Arm")
pbc_filtered_trt <- pbc_filtered[pbc_filtered$arm==1,]
pbc_filtered_ctl <- pbc_filtered[pbc_filtered$arm==0,]
rbancova_rmst(data_treated = pbc_filtered_trt, data_control=pbc_filtered_ctl, time_var="time_year", event_var="status_dichot", covariate_vars=NULL, timepoints=10, num_intervals=10)
# During development, you can uncomment the next line in an interactive session
# to use the functions in R/ without installing the package:
# devtools::load_all("..")
devtools::install()
library(RBANCOVA.RMST)
library(dplyr)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
set.seed(2677)
# During development, you can uncomment the next line in an interactive session
# to use the functions in R/ without installing the package:
# devtools::load_all("..")
devtools::install()
library(RBANCOVA.RMST)
library(dplyr)
#--------------------------------------------------------------------------------#
# Filter PBC Data
#--------------------------------------------------------------------------------#
library(survival)
#Filter to those enrolled in the randomized trial
pbc_filtered <- pbc %>% filter(!is.na(trt))
#Original data: 0/1/2 = censored/transplant/dead
##Edit so that transplant = censored at time of transplant [death = 1, 0 = censored/transplant]
pbc_filtered <- pbc_filtered %>%
mutate(status_dichot = ifelse(status == 2, 1, 0))
#Create year variable and create arm variable [0=placebo, 1=D-penicillmain]
pbc_filtered <- pbc_filtered %>%
mutate(time_year = time/365,
arm = ifelse(trt == 2, 0, trt))
#Current RBANCOVA-RMST methodology assumes no missing data
#impute mean copper level within each group when missing.
mean_copper_1 <- mean(pbc_filtered[!(is.na(pbc_filtered$copper)) & pbc_filtered$arm==1,]$copper)
mean_copper_0 <-  mean(pbc_filtered[!(is.na(pbc_filtered$copper)) & pbc_filtered$arm==0,]$copper)
pbc_filtered <- pbc_filtered %>%
mutate(copper_imp = ifelse(is.na(copper), ifelse(arm==1, mean_copper_1, mean_copper_0), copper))
library(survminer)
fit_trt <- survfit(Surv(time_year, status_dichot) ~ trt,
data =pbc_filtered)
# Visualize with survminer
ggsurvplot(fit_trt,
data = pbc_filtered,
risk.table = TRUE,
censor.shape = NA,                 # Remove plus signs at censoring points
legend.labs = c("D-penicillamine", "Placebo"),  # Rename the groups
xlab = "Years",                     # Change x-axis label to 'Years'
legend.title = "Trial Arm")
pbc_filtered_trt <- pbc_filtered[pbc_filtered$arm==1,]
pbc_filtered_ctl <- pbc_filtered[pbc_filtered$arm==0,]
rbancova_rmst(data_treated = pbc_filtered_trt, data_control=pbc_filtered_ctl, time_var="time_year", event_var="status_dichot", covariate_vars=NULL, timepoints=10, num_intervals=10)
rbancova_rmst(data_treated = pbc_filtered_trt, data_control=pbc_filtered_ctl, time_var="time_year", event_var="status_dichot", covariate_vars=c("stage","copper_imp", "bili", "albumin"), timepoints=10, num_intervals=10)
# During development, you can uncomment the next line in an interactive session
# to use the functions in R/ without installing the package:
# devtools::load_all("..")
devtools::install()
library(RBANCOVA.RMST)
library(dplyr)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
set.seed(2677)
# During development, you can uncomment the next line in an interactive session
# to use the functions in R/ without installing the package:
# devtools::load_all("..")
devtools::install()
library(RBANCOVA.RMST)
library(dplyr)
#--------------------------------------------------------------------------------#
# Filter PBC Data
#--------------------------------------------------------------------------------#
library(survival)
#Filter to those enrolled in the randomized trial
pbc_filtered <- pbc %>% filter(!is.na(trt))
#Original data: 0/1/2 = censored/transplant/dead
##Edit so that transplant = censored at time of transplant [death = 1, 0 = censored/transplant]
pbc_filtered <- pbc_filtered %>%
mutate(status_dichot = ifelse(status == 2, 1, 0))
#Create year variable and create arm variable [0=placebo, 1=D-penicillmain]
pbc_filtered <- pbc_filtered %>%
mutate(time_year = time/365,
arm = ifelse(trt == 2, 0, trt))
#Current RBANCOVA-RMST methodology assumes no missing data
#impute mean copper level within each group when missing.
mean_copper_1 <- mean(pbc_filtered[!(is.na(pbc_filtered$copper)) & pbc_filtered$arm==1,]$copper)
mean_copper_0 <-  mean(pbc_filtered[!(is.na(pbc_filtered$copper)) & pbc_filtered$arm==0,]$copper)
pbc_filtered <- pbc_filtered %>%
mutate(copper_imp = ifelse(is.na(copper), ifelse(arm==1, mean_copper_1, mean_copper_0), copper))
library(survminer)
fit_trt <- survfit(Surv(time_year, status_dichot) ~ trt,
data =pbc_filtered)
# Visualize with survminer
ggsurvplot(fit_trt,
data = pbc_filtered,
risk.table = TRUE,
censor.shape = NA,                 # Remove plus signs at censoring points
legend.labs = c("D-penicillamine", "Placebo"),  # Rename the groups
xlab = "Years",                     # Change x-axis label to 'Years'
legend.title = "Trial Arm")
pbc_filtered_trt <- pbc_filtered[pbc_filtered$arm==1,]
pbc_filtered_ctl <- pbc_filtered[pbc_filtered$arm==0,]
rbancova_rmst(data_treated = pbc_filtered_trt, data_control=pbc_filtered_ctl, time_var="time_year", event_var="status_dichot", covariate_vars=NULL, timepoints=10, num_intervals=10)
